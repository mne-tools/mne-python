trigger:
  # start a new build for every push
  batch: False
  branches:
    include:
      - master
      - maint/*

jobs:
- job: Windows
  pool:
    vmIMage: 'VS2017-Win2016'
  variables:
    MNE_LOGGING_LEVEL: 'warning'
    MNE_FORCE_SERIAL: 'true'
    OPENBLAS_NUM_THREADS: 1
    AZURE_CI_WINDOWS: 'true'
    PYTHON_VERSION: '3.7'
    CONDA_VERSION: '>=4.3.27'
  strategy:
    maxParallel: 4
    matrix:
      # Eventually we should test x86 (32-bit), but it was a nightmare
      # to get it to download 32-bit Anaconda properly, and VTK does not ship
      # 32-bit Windows binaries via pip.
      Python37-64bit-full-conda:
        PLATFORM: 'x86-64'
        TEST_MODE: 'conda'
        CONDA_ENV: 'environment.yml'
        PIP_NO_UPGRADE: 'True'
      Python37-64bit-full-pip:
        PYTHON_ARCH: 'x64'
        TEST_MODE: 'pip'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(PYTHON_VERSION)
      architecture: $(PYTHON_ARCH)
      addToPath: true
    condition: eq(variables['TEST_MODE'], 'pip')
  - powershell: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = "Stop"
      $PSDefaultParameterValues['*:ErrorAction']='Stop'
      git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
      powershell gl-ci-helpers/appveyor/install_opengl.ps1
    displayName: Install OpenGL
  - powershell: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = "Stop"
      $PSDefaultParameterValues['*:ErrorAction']='Stop'
      pip install --upgrade numpy scipy vtk
      pip install --upgrade -r requirements.txt
      pip install codecov
    condition: eq(variables['TEST_MODE'], 'pip')
    displayName: 'Install dependencies with pip'
  - powershell: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = "Stop"
      $PSDefaultParameterValues['*:ErrorAction']='Stop'
      $env:PYTHON = '$(System.DefaultWorkingDirectory)' + '\conda'
      git clone git://github.com/astropy/ci-helpers.git
      powershell ci-helpers/appveyor/install-miniconda.ps1
      $env:PATH = $env:PYTHON + ";" + $env:PYTHON + "\Scripts;" + $env:PYTHON + "\Library\bin;" + $env:PATH
      conda env list
      conda install numpy scipy matplotlib scikit-learn
      conda env update --file $env:CONDA_ENV
      pip uninstall -yq mne
      pip install codecov
      Write-Host ("##vso[task.setvariable variable=PATH]" + $env:PATH)
    condition: eq(variables['TEST_MODE'], 'conda')
    displayName: 'Install dependencies with conda'
  - script: python setup.py develop
    displayName: 'Install MNE-Python dev'
  - script: python -c "import mne; print(mne.sys_info())"
    displayName: 'Print config'
  - script: python -c "import mne; mne.datasets.testing.data_path(verbose=True)"
    displayName: 'Get test data'
  - script: pytest -m "not ultraslowtest" --cov=mne mne
    displayName: 'Run tests'
  - script: codecov --root %BUILD_REPOSITORY_LOCALPATH% -t %CODECOV_TOKEN%
    displayName: 'Codecov'
    env:
      CODECOV_TOKEN: $(CODECOV_TOKEN)
    condition: always()
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'junit-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
    condition: always()
