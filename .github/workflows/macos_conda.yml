name: 'macos / conda'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  job:
    name: 'macos 3.8'
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    env:
      PYTHON_VERSION: '3.8'
      MNE_LOGGING_LEVEL: 'warning'
      MNE_3D_OPTION_SMOOTH_SHADING: 'true'
      OPENBLAS_NUM_THREADS: '1'
      PYTHONUNBUFFERED: '1'
      CONDA_ENV: 'environment.yml'
      CI_OS_NAME: 'osx'
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: 'mne'
          python-version: ${{ env.PYTHON_VERSION }}
          environment-file: ${{ env.CONDA_ENV }}
        name: 'Setup conda'
      - shell: bash -el {0}
        run: |
          ./tools/github_actions_dependencies.sh
        name: 'Install dependencies'
      # https://github.com/mne-tools/mne-python/issues/10805
      # https://github.com/mne-tools/mne-python/runs/7042965701?check_suite_focus=true
      #- shell: bash -el {0}
      #  run: |
      #    source tools/get_minimal_commands.sh
      #  name: 'Install minimal commands'
      #- shell: bash -el {0}
      #  run: mne_surf2bem --version
      #  name: 'Check minimal commands'
      - shell: bash -el {0}
        run: ./tools/github_actions_install.sh
        name: 'Install MNE'
      - shell: bash -el {0}
        run: ./tools/github_actions_infos.sh
        name: 'Show infos'
      - shell: bash -el {0}
        run: ./tools/get_testing_version.sh
        name: 'Get testing version'
      - uses: actions/cache@v3
        with:
          key: ${{ env.TESTING_VERSION }}
          path: ~/mne_data
        name: 'Cache testing data'
      - shell: bash -el {0}
        run: ./tools/github_actions_download.sh
        name: 'Download testing data'
      - shell: bash -el {0}
        run: ./tools/github_actions_locale.sh
        name: 'Print locale'
      - shell: bash -el {0}
        run: ./tools/github_actions_test.sh
        name: 'Run tests'
      - uses: codecov/codecov-action@v3
        if: success()
        name: 'Upload coverage to CodeCov'
