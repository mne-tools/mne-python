name: CI
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  MacOS:
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip github]')"
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    env:
      PYTHON_VERSION: '3.8'
      MNE_LOGGING_LEVEL: 'warning'
      OPENBLAS_NUM_THREADS: '1'
      PYTHONUNBUFFERED: '1'
      CONDA_ENV: 'environment.yml'
      TRAVIS_OS_NAME: 'osx'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
        name: 'Cache conda'
      - uses: goanpeca/setup-miniconda@v1
        with:
          activate-environment: 'mne'
          python-version: ${{ env.PYTHON_VERSION }}
          environment-file: ${{ env.CONDA_ENV }}
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
        name: 'Setup conda'
      - shell: bash -el {0}
        run: |
          pip uninstall -yq mne
          pip install --upgrade -r requirements_testing.txt
          pip install nitime
          source tools/get_minimal_commands.sh
          mne_surf2bem --version
        name: 'Install dependencies'
      - shell: bash -el {0}
        run: |
          python setup.py build
          python setup.py install
          mne sys_info
          python -c "import numpy; numpy.show_config()"
        name: 'Install MNE'
      - shell: bash -el {0}
        run: |
          python -c 'import mne; mne.datasets.testing.data_path(verbose=True)';
        name: 'Download testing data'
      - shell: bash -el {0}
        run: |
          echo "Print locale "
          locale
          echo "Other stuff"
        name: 'Print locale'
      - shell: bash -el {0}
        run: |
          echo 'pytest -m "${CONDITION}" --tb=short --cov=mne --cov-report xml -vv ${USE_DIRS}'
          pytest -m "${CONDITION}" --tb=short --cov=mne --cov-report xml -vv ${USE_DIRS}
        env:
          CONDITION: 'not slowtest'
          USE_DIRS: 'mne/'
        name: 'Run tests'
      - uses: codecov/codecov-action@v1
        if: success()
        name: 'Upload coverage to CodeCov'
