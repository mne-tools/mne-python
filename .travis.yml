language: python

env:
    # Enable python 2 and python 3 builds
    # DEPS=full: build optional dependencies: pandas, nitime, statsmodels,
    #            scikit-learn, patsy, nibabel; in the case of Python 2, also 
    #            nitime
    # DEPS=minimal: don't build optional dependencies; tests that require those
    #               dependencies are supposed to be skipped
    - PYTHON=2.7 DEPS=full
    - PYTHON=3.3 DEPS=full
    - PYTHON=2.7 DEPS=minimal
# Setup anaconda
before_install:
  - wget http://repo.continuum.io/miniconda/Miniconda-2.2.2-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=/home/travis/anaconda/bin:$PATH
  - conda update --yes conda
  # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm

install:
    - conda create -n testenv --yes pip python=$PYTHON
    - source activate testenv
    - conda install --yes ipython==1.1.0 numpy scipy nose matplotlib
    - if [ "${DEPS}" == "full" ]; then conda install --yes pandas statsmodels scikit-learn patsy; pip install nibabel; if [ ${PYTHON:0:1} == "2" ]; then pip install nitime; fi; fi;
    - pip install coverage; pip install coveralls
    - MNE_FORCE_SERIAL=1
    - MNE_SKIP_SAMPLE_DATASET_TESTS=1
    - python setup.py build
    - python setup.py install
    - myscripts='browse_raw bti2fiff surf2bem'
    - for script in $myscripts; do mne $script --help >/dev/null; done;
    - SRC_DIR=$(pwd)
    - cd ~
    - MNE_DIR=$(python -c 'import mne;print(mne.__path__[0])')
    - ln -s ${SRC_DIR}/mne/fiff/tests/data ${MNE_DIR}/fiff/tests/data
    - ln -s ${SRC_DIR}/mne/fiff/bti/tests/data ${MNE_DIR}/fiff/bti/tests/data
    - ln -s ${SRC_DIR}/mne/fiff/edf/tests/data ${MNE_DIR}/fiff/edf/tests/data
    - ln -s ${SRC_DIR}/mne/fiff/kit/tests/data ${MNE_DIR}/fiff/kit/tests/data
    - ln -s ${SRC_DIR}/mne/fiff/brainvision/tests/data ${MNE_DIR}/fiff/brainvision/tests/data

script:
    - cd ${MNE_DIR}/../
    - nosetests -v --with-coverage --cover-package=mne

after_success:
    - coveralls
