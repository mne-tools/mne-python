trigger:
  # start a new build for every push
  batch: False
  branches:
    include:
      - master
      - maintenance/*

jobs:
- job: Windows
  pool:
    vmIMage: 'VS2017-Win2016'
  strategy:
    maxParallel: 4
    matrix:
        Python35-32bit-full:
          PYTHON_VERSION: '3.5'
          PYTHON_ARCH: 'x86'
          TEST_MODE: 'conda'
          BITS: 32
          CONDA_ENVIRONMENT: 'environment.yml'
          PIP_DEPENDENCIES: 'codecov pytest-sugar pytest-timeout'
        Python37-64bit-full:
          PYTHON_VERSION: '3.7'
          PYTHON_ARCH: 'x64'
          TEST_MODE: 'pip'
          BITS: 64
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(PYTHON_VERSION)
      addToPath: true
      architecture: $(PYTHON_ARCH)
  - powershell: |
      $env:MNE_LOGGING_LEVEL = "warning"
      $env:MNE_FORCE_SERIAL = "true"
      refreshenv
    displayName: 'Set env vars'
  - powershell: |
      If ( $env:TEST_MODE -eq "pip" ) {
        pip install --upgrade numpy scipy vtk
        pip install --upgrade -r requirements.txt
        pip install codecov
      }
      Else {
        $env:PYTHON= $env:System.DefaultWorkingDirectory + '\conda'
        git clone git://github.com/astropy/ci-helpers.git
        powershell ci-helpers/appveyor/install-miniconda.ps1
        $env:PATH= $env:PYTHON + ";" + $env:PYTHON + "\Scripts" + $env:PATH
        activate test
        refreshenv
        pip uninstall -yq mne
      }
    displayName: 'Install dependencies'
  - script: python setup.py develop
    displayName: 'Install MNE-Python'
  - script: python -c "import mne; print(mne.sys_info())"
    displayName: 'Print config'
  - script: python -c "import mne; mne.datasets.testing.data_path(verbose=True)"
    displayName: 'Get test data'
  - script: pytest -m "not ultraslowtest" mne --cov=mne
    displayName: 'Run tests'
  - script: codecov
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'junit-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'