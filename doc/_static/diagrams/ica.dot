digraph ICAdiagram {
    /* LAYOUT CONTROL */
    rankdir=LR
    newrank=true
    ranksep=0.75
    clusterrank=local

    /* GLOBAL STYLES */
    splines=true
    color="gray60"
    fontsize=20
    fontname="Source Code Pro"

    node [colorscheme="paired8"
          style="filled"
          fontsize=18
          fontname="Source Sans Pro"]

    edge [color="gray50"
          fontsize=12
          fontname="Source Code Pro"]

    /* starting node */
    sensor [label="Sensor data" shape="box" fillcolor=3]

    /* ICA.FIT() */
    subgraph cluster_0 {
        label="ICA.fit()"

        /* PRE-WHITENING */
        subgraph cluster_1 {
            label="Pre-whitening"
            style="dashed"
            fontsize=20
            fontname="Source Sans Pro"
            /* nodes & edges */
            pca        [label="PCA"                   shape="circle" fillcolor=8]
            pcs        [label="Principal\ncomponents" shape="box"    fillcolor=1]
            pca -> pcs [label="max_pca_components"]
        }

        /* nodes & edges */
        ica        [label="ICA"                     shape="circle" fillcolor=8]
        ics        [label="Independent\ncomponents" shape="box"    fillcolor=1]
        ica -> ics [label="n_components"]
    }

    /* ICA.APPLY() */
    subgraph cluster_2 {
        label="ICA.apply()"
        /* ending node */
        recon [label="Reconstructed\nsensor data" shape="box" fillcolor=3]
    }

    /* subgraph-crossing edges */
    sensor -> pca  [label="all sensor channels" fontsize=14 fontname="Source Sans Pro"]
    pcs -> ica     [label="n_components"]
    ics -> recon   [constraint=false xlabel="n_components -\llen(ICA.exclude)\l"]
    pcs -> recon   [constraint=false xlabel="n_pca_components\l- n_components\l"]

    /* position recon box where we want it */
    { rank="same" recon ica }
}
