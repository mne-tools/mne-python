# Adapted from M. Brett's .yaml file for nipy:
# https://github.com/nipy/nipy/blob/master/.travis.yml
#
# We pretend to be erlang because we need can't use the python support in
# travis-ci; it uses virtualenvs, they do not have numpy, scipy, matplotlib,
# and it is impractical to build them

language: erlang
env:
    # Enable python 2 and python 3 builds. Python3.2 available in Ubuntu 12.04.
    - PYTHON=python EASY_INSTALL=easy_install PIP=pip NOSETESTS=nosetests PYSUF='' OPTDEPS=T
    - PYTHON=python3 EASY_INSTALL=easy_install3 PIP=pip-3.2 NOSETESTS=nosetests3 PYSUF=3 OPTDEPS=T
    - PYTHON=python EASY_INSTALL=easy_install PIP=pip NOSETESTS=nosetests PYSUF='' OPTDEPS=F
install:
    - sudo apt-get update -qq
    - sudo apt-get install $PYTHON-dev $PYTHON-numpy $PYTHON-scipy
    - sudo apt-get install $PYTHON-setuptools $PYTHON-nose
    - sudo apt-key adv --recv-keys --keyserver pgp.mit.edu 2649A5A9
    - sudo apt-get update -qq
    - sudo $EASY_INSTALL pip
    - if [ "${OPTDEPS}" == "T" ]; then
        wget -O- http://neuro.debian.net/lists/precise.us-nh.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list;
      fi
    - if [ "${OPTDEPS}" == "T" ]; then
        sudo $PIP install nibabel;
      fi
    - if [ "${OPTDEPS}" == "T" ]; then
        sudo $PIP install scikit-learn;
      fi
    - if [ "${OPTDEPS}" == "T" ]; then
        sudo $PIP install patsy;
      fi
    - if [ "${OPTDEPS}" == "T" ]; then
        sudo $PIP install pandas;
      fi
    - if [ "${OPTDEPS}" == "T" ]; then
        sudo $PIP install statsmodels;
      fi
    - if [ "${PYSUF}" != "3" ] && [ "${OPTDEPS}" == "T" ]; then
          sudo $PIP install nitime;
      fi
    - if [ "${PYSUF}" != "3" ]; then
        sudo apt-get --no-install-recommends install $PYTHON-matplotlib;
        sudo $PIP install coverage;
        sudo $PIP install coveralls;
      else
        sudo $EASY_INSTALL -U distribute;
        sudo $PIP install matplotlib;
      fi
    - MNE_FORCE_SERIAL=1
    - MNE_SKIP_SAMPLE_DATASET_TESTS=1
    - $PYTHON setup.py build
    - $PYTHON setup.py install --user
    - myscripts='browse_raw bti2fiff surf2bem'
    - PATH=${PATH}:~/.local/bin/
    - for script in $myscripts; do mne $script --help >/dev/null; done;
    - SRC_DIR=$(pwd)
    - cd ~
    - MNE_DIR=$($PYTHON -c 'import mne;print(mne.__path__[0])')
    - ln -s ${SRC_DIR}/mne/fiff/tests/data ${MNE_DIR}/fiff/tests/data
    - ln -s ${SRC_DIR}/mne/fiff/bti/tests/data ${MNE_DIR}/fiff/bti/tests/data
    - ln -s ${SRC_DIR}/mne/fiff/edf/tests/data ${MNE_DIR}/fiff/edf/tests/data
    - ln -s ${SRC_DIR}/mne/fiff/kit/tests/data ${MNE_DIR}/fiff/kit/tests/data
    - ln -s ${SRC_DIR}/mne/fiff/brainvision/tests/data ${MNE_DIR}/fiff/brainvision/tests/data
script:
    - cd ${MNE_DIR}/../
    - ${NOSETESTS} -v --exe mne
after_success:
    - if [ "${PYSUF}" != "3" ]; then coveralls; fi
