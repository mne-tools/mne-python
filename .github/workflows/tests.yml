name: 'Tests'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:  # yamllint disable-line rule:truthy
  push:
    branches: ["main", "maint/*"]
  pull_request:
    branches: ["main", "maint/*"]
  # adapted from spyder-ide/spyder
  workflow_dispatch:
    inputs:
      ssh:
        description: 'Enable ssh debugging'
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  style:
    name: Style
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - uses: pre-commit/action@v3.0.1
      - run: pip install mypy numpy scipy vulture
      - run: mypy
      - run: vulture

  bandit:
    name: Bandit
    needs: style
    runs-on: ubuntu-latest
    steps:
      - uses: davidslusser/actions_python_bandit@v1.0.1
        with:
          src: "mne"
          options: "-c pyproject.toml -ll -r"
          pip_install_command: "pip install bandit[toml]"

  pytest:
    name: '${{ matrix.os }} / ${{ matrix.kind }} / ${{ matrix.python }}'
    needs: style
    timeout-minutes: 120
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    env:
      PYTHON_VERSION: '${{ matrix.python }}'
      MKL_NUM_THREADS: '1'
      OPENBLAS_NUM_THREADS: '1'
      PYTHONUNBUFFERED: '1'
      MNE_CI_KIND: '${{ matrix.kind }}'
      CI_OS_NAME: '${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: '3.13'
            kind: pip-pre
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Get commit message
        run: echo "COMMIT_MESSAGE=$(git show -s --format=%s ${{ github.event.pull_request.head.sha || github.sha }})" | tee -a ${GITHUB_ENV}
      - name: Triage SSH
        run: |
          if [[ "${{ inputs.ssh }}" == "true" ]] || [[ "$COMMIT_MESSAGE" == *"[actions ssh]"* ]]; then
            echo "ENABLE_SSH=true" | tee -a $GITHUB_ENV
          else
            echo "ENABLE_SSH=false" | tee -a $GITHUB_ENV
          fi
      - name: Setup Remote SSH Connection
        if: env.ENABLE_SSH == 'true'
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 80
        with:
          detached: true
      - run: ./tools/github_actions_env_vars.sh
      # Xvfb/OpenGL
      - uses: pyvista/setup-headless-display-action@v4
        with:
          qt: true
          pyvista: false
          wm: false
      # Python (if pip)
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
        if: startswith(matrix.kind, 'pip')
      - run: pip install --pre --only-binary ":all:" --extra-index-url "https://wheels.vtk.org" vtk PySide6 pyvista
      - run: LD_DEBUG=libs python -c "from PySide6.QtWidgets import QApplication; QApplication(); from vtkmodules.qt.QVTKRenderWindowInteractor import QVTKRenderWindowInteractor; print(QVTKRenderWindowInteractor())"
