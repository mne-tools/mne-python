# # # WARNING # # #
# This list must also be updated in doc/_templates/autosummary/class.rst if it
# is changed here!
import lazy_loader as lazy

_doc_special_members = (
    "__contains__",
    "__getitem__",
    "__iter__",
    "__len__",
    "__add__",
    "__sub__",
    "__mul__",
    "__div__",
    "__neg__",
)

__getattr__, __dir__, __all__ = lazy.attach(
    __name__,
    submodules=[],
    submod_attrs={
        "_bunch": ["Bunch", "BunchConst", "BunchConstNamed"],
        "check": [
            "_check_all_same_channel_names",
            "_check_ch_locs",
            "_check_channels_spatial_filter",
            "_check_combine",
            "_check_compensation_grade",
            "_check_depth",
            "_check_dict_keys",
            "_check_edflib_installed",
            "_check_eeglabio_installed",
            "_check_event_id",
            "_check_fname",
            "_check_freesurfer_home",
            "_check_head_radius",
            "_check_if_nan",
            "_check_info_inv",
            "_check_integer_or_list",
            "_check_on_missing",
            "_check_one_ch_type",
            "_check_option",
            "_check_pandas_index_arguments",
            "_check_pandas_installed",
            "_check_preload",
            "_check_pybv_installed",
            "_check_pymatreader_installed",
            "_check_qt_version",
            "_check_range",
            "_check_rank",
            "_check_sphere",
            "_check_src_normal",
            "_check_stc_units",
            "_check_subject",
            "_check_time_format",
            "_ensure_events",
            "_ensure_int",
            "_import_h5io_funcs",
            "_import_h5py",
            "_import_nibabel",
            "_import_pymatreader_funcs",
            "_is_numeric",
            "_on_missing",
            "_path_like",
            "_require_version",
            "_safe_input",
            "_soft_import",
            "_suggest",
            "_to_rgb",
            "_validate_type",
            "check_fname",
            "check_random_state",
            "check_version",
            "has_nibabel",
            "int_like",
            "path_like",
        ],
        "config": [
            "_get_extra_data_path",
            "_get_numpy_libs",
            "_get_root_dir",
            "_get_stim_channel",
            "get_config_path",
            "get_config",
            "get_subjects_dir",
            "set_cache_dir",
            "set_config",
            "set_memmap_min_size",
            "sys_info",
        ],
        "dataframe": [
            "_build_data_frame",
            "_convert_times",
            "_scale_dataframe_data",
            "_set_pandas_dtype",
        ],
        "docs": [
            "copy_base_doc_to_subclass_doc",
            "copy_doc",
            "copy_function_doc_to_method_doc",
            "deprecated_alias",
            "deprecated",
            "fill_doc",
            "legacy",
            "linkcode_resolve",
            "open_docs",
        ],
        "fetching": ["_url_to_local_path"],
        "linalg": [
            "_get_blas_funcs",
            "_repeated_svd",
            "_svd_lwork",
            "_sym_mat_pow",
            "eigh",
            "sqrtm_sym",
        ],
        "_logging": [
            "_get_call_line",
            "_parse_verbose",
            "_record_warnings",
            "_verbose_safe_false",
            "catch_logging",
            "ClosingStringIO",
            "filter_out_warnings",
            "logger",
            "set_log_file",
            "set_log_level",
            "use_log_level",
            "verbose",
            "warn",
            "wrapped_stdout",
        ],
        "misc": [
            "_assert_no_instances",
            "_clean_names",
            "_DefaultEventParser",
            "_explain_exception",
            "_file_like",
            "_get_argvalues",
            "_pl",
            "_resource_path",
            "pformat",
            "repr_html",
            "run_subprocess",
            "running_subprocess",
            "sizeof_fmt",
        ],
        "mixin": [
            "_FakeNoPandas",
            "GetEpochsMixin",
            "SizeMixin",
            "TimeMixin",
            "_prepare_read_metadata",
            "_prepare_write_metadata",
        ],
        "numerics": [
            "_apply_scaling_array",
            "_apply_scaling_cov",
            "_arange_div",
            "_array_equal_nan",
            "_cal_to_julian",
            "_check_dt",
            "_compute_row_norms",
            "_custom_lru_cache",
            "_dt_to_julian",
            "_dt_to_stamp",
            "_freq_mask",
            "_gen_events",
            "_get_inst_data",
            "_hashable_ndarray",
            "_julian_to_cal",
            "_julian_to_dt",
            "_mask_to_onsets_offsets",
            "_PCA",
            "_reg_pinv",
            "_reject_data_segments",
            "_replace_md5",
            "_ReuseCycle",
            "_scaled_array",
            "_stamp_to_dt",
            "_time_mask",
            "_undo_scaling_array",
            "_undo_scaling_cov",
            "array_split_idx",
            "compute_corr",
            "create_slices",
            "grand_average",
            "hashfunc",
            "object_diff",
            "object_hash",
            "object_size",
            "random_permutation",
            "split_list",
            "sum_squared",
        ],
        "progressbar": ["ProgressBar"],
        "_testing": [
            "ArgvSetter",
            "SilenceStdout",
            "_click_ch_name",
            "_raw_annot",
            "_TempDir",
            "assert_and_remove_boundary_annot",
            "assert_dig_allclose",
            "assert_meg_snr",
            "assert_object_equal",
            "assert_snr",
            "assert_stcs_equal",
            "buggy_mkl_svd",
            "has_freesurfer",
            "has_mne_c",
            "requires_freesurfer",
            "requires_good_network",
            "requires_h5py",
            "requires_mne_mark",
            "requires_mne_qt_browser",
            "requires_mne",
            "requires_neuromag2ft",
            "requires_nitime",
            "requires_numpydoc",
            "requires_openmeeg_mark",
            "requires_pandas",
            "requires_pylsl",
            "requires_sklearn",
            "requires_version",
            "run_command_if_main",
        ],
    },
)
